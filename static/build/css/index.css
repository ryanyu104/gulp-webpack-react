.center-block{width:1200px;margin:0 auto;text-align:center}.center-block h2{font-size:5vw}.center-block div{background:#fff;color:red}.center-block p{background-color:#27ffe8;*zoom:1;float:left;clear:none;text-align:inherit;width:33.33333333333333%;margin-left:0;margin-right:0;line-height:1.8}.center-block p:after,.center-block p:before{content:'';display:table}.center-block p:after{clear:both}.center-block img{width:400px}
/*# sourceMappingURL=data:application/json;base64, */
